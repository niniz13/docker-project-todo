version: '3'

services:
  postgres:
    container_name: todo_postgres
    image: postgres:13.0-alpine
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - backend_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5

  django:
    container_name: todo_django
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/app
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - frontend_network
      - backend_network
    user: appuser

  react:
    container_name: todo_react
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/app
      - /app/node_modules
    ports:
      - '5173:5173'
    depends_on:
      - django
    networks:
      - frontend_network

  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    ports:
      - 3001:3001
    volumes:
      - uptime-kuma-data:/app/data
    networks:
      - frontend_network

volumes:
  postgres_data:
  uptime-kuma-data:

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge
